<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>段落切分</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
            text-align: center;
        }

        .paragraph {
            margin-bottom: 10px;
        }

        #upload {
            margin-bottom: 20px;
        }

        #content {
            text-align: left;
            border: 1px solid #ddd;
            padding: 20px;
            margin: 20px auto;
            width: 80%;
            max-width: 600px;
            background-color: white;
        }

        .paragraph {
            margin-bottom: 15px;
            line-height: 1.5;
        }

        .paragraph label {
            margin-left: 10px;
        }

        #generate {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        #generate:hover {
            background-color: #45a049;
        }
    </style>

</head>

<body>
    <h1>段落切分</h1>
    <input type="file" id="upload" accept=".docx">
    <div id="content"></div>
    <button id="generate">合并文本生成txt文件</button>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js"></script>
    <script>
        document.getElementById('upload').addEventListener('change', handleFileSelect, false);
document.getElementById('generate').addEventListener('click', generateTextFile, false);

function handleFileSelect(event) {
    const reader = new FileReader();
    reader.onload = function (event) {
        mammoth.extractRawText({ arrayBuffer: event.target.result })
            .then(displayContent)
            .catch(handleError);
    };
    reader.readAsArrayBuffer(event.target.files[0]);
}

function displayContent(result) {
    const paragraphs = result.value.split('\n');
    const contentDiv = document.getElementById('content');
    contentDiv.innerHTML = '';

    paragraphs.forEach((paragraph, index) => {
        const paraDiv = document.createElement('div');
        paraDiv.classList.add('paragraph');
        paraDiv.innerHTML = `
            <input type="checkbox" id="check${index}" />
            <label for="check${index}">${paragraph}</label>
        `;
        contentDiv.appendChild(paraDiv);
    });
}

function handleError(err) {
    console.error(err);
}

function generateTextFile() {
    let textToWrite = '';
    const checkboxes = document.querySelectorAll('#content input[type="checkbox"]');
    checkboxes.forEach((checkbox, index) => {
        if (checkbox.checked) {
            textToWrite += document.querySelector(`label[for="${checkbox.id}"]`).textContent + '\n';
        }
    });

    const blob = new Blob([textToWrite], { type: 'text/plain' });
    const downloadLink = document.createElement('a');
    downloadLink.href = URL.createObjectURL(blob);
    downloadLink.download = 'selected_text.txt';
    document.body.appendChild(downloadLink);
    downloadLink.click();
    document.body.removeChild(downloadLink);
}

    </script>
</body>

</html>